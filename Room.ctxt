#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ Class\ Room\ -\ a\ room\ in\ this\ adventure\ game.\r\n\r\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ It\ is\ connected\ to\ other\ rooms\ via\ exits.\ \r\n\ For\ each\ existing\ exit,\ the\ room\ stores\ a\ reference\ to\ the\ neighboring\ room.\r\n\ \r\n\ @author\ Stefan\ Jilderda\ and\ Stefan\ Kuppen\r\n\ @version\ 24.01.2020\r\n
comment1.params=ID\ shortDescription\ longDescription\ canHoldItem
comment1.target=Room(java.lang.String,\ java.lang.String,\ java.lang.String,\ boolean)
comment1.text=\r\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\ no\ exits.\r\n\ "description"\ is\ something\ like\ "a\ kitchen"\ or\ "an\ open\ court\ yard".\r\n\ \r\n\ @param\ ID\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ The\ room\ ID.\r\n\ @param\ shortDescription\ The\ short\ description\ of\ the\ room.\r\n\ @param\ longDescription\ \ The\ long\ description\ of\ the\ room.\r\n\ @param\ canHoldItem\ \ \ \ \ \ Checks\ if\ the\ room\ may\ hold\ items\ for\ the\ randomly\ generated\ items.\r\n
comment10.params=
comment10.target=boolean\ getWinRoom()
comment10.text=\r\n\ @return\ returns\ true\ if\ the\ room\ is\ a\ win\ room.\r\n
comment11.params=isWinRoom
comment11.target=void\ setWinRoom(boolean)
comment11.text=\r\n\ @param\ sets\ the\ winroom\ based\ on\ input.\ isWinRoom\ sets\ the\ win\ room.\r\n
comment12.params=isTrapRoom
comment12.target=void\ setIsTrapRoom(boolean)
comment12.text=\r\n\ @param\ isTrapRoom\ Sets\ the\ room\ as\ a\ traproom.\r\n
comment13.params=isLocked
comment13.target=void\ setIsLocked(boolean)
comment13.text=\r\n\ @param\ True\ Sets\ a\ lock\ on\ the\ room.\r\n
comment14.params=
comment14.target=void\ unlockRoom()
comment14.text=\r\n\ Unlocks\ the\ room.\r\n
comment15.params=
comment15.target=void\ lockRoom()
comment15.text=\r\n\ Locks\ the\ room.\r\n
comment16.params=ID
comment16.target=void\ setRoomID(java.lang.String)
comment16.text=\r\n\ @param\ ID\ Sets\ the\ room\ ID.\r\n
comment17.params=
comment17.target=boolean\ getUnlockRoom()
comment17.text=\r\n\ @return\ Returns\ whether\ or\ not\ the\ room\ is\ an\ unlockRoom.\r\n
comment18.params=
comment18.target=java.lang.String\ getUnlockItem()
comment18.text=\r\n\ @return\ Returns\ the\ item\ where\ the\ next\ room\ can\ be\ unlocked\ with.\r\n
comment19.params=
comment19.target=java.lang.String\ getUnlocksRoomID()
comment19.text=\r\n\ @return\ Returns\ the\ String\ of\ the\ roomID\ that\ can\ be\ unlocked.\r\n
comment2.params=itemToBeAdded
comment2.target=void\ setRoomInventory(Item)
comment2.text=\r\n\ Add\ something\ to\ the\ current\ room\ inventory\r\n
comment20.params=
comment20.target=boolean\ getCanBeBurned()
comment20.text=\r\n\ @return\ True\ if\ you\ can\ burn\ something\ in\ this\ room.\r\n
comment21.params=
comment21.target=boolean\ getIsTrapRoom()
comment21.text=\r\n\ @return\ True\ if\ this\ room\ is\ a\ Trapdoor.\r\n
comment22.params=
comment22.target=boolean\ getIsLocked()
comment22.text=\r\n\ @return\ True\ if\ the\ room\ is\ locked.\r\n
comment23.params=
comment23.target=boolean\ canRoomHoldItems()
comment23.text=\r\n\ @return\ True\ if\ the\ room\ can\ hold\ items.\r\n
comment24.params=
comment24.target=boolean\ doesRoomContainItems()
comment24.text=\r\n\ @return\ True\ in\ the\ room\ contains\ items.\r\n
comment25.params=
comment25.target=java.lang.String\ getRoomID()
comment25.text=\r\n\ Get\ the\ current\ room\ ID.\r\n\ @return\ roomID\ is\ the\ ID\ of\ the\ room.\r\n
comment26.params=
comment26.target=java.util.ArrayList\ getRoomInventory()
comment26.text=\r\n\ Get\ the\ current\ room\ inventory.\r\n
comment27.params=
comment27.target=java.lang.String\ getShortDescription()
comment27.text=\r\n\ @return\ The\ short\ description\ of\ the\ room.\r\n
comment28.params=
comment28.target=java.lang.String\ getlongDescription()
comment28.text=\r\n\ @return\ The\ long\ description\ of\ the\ room.\r\n
comment29.params=
comment29.target=java.lang.String\ getRoomDescription()
comment29.text=\r\n\ Return\ a\ description\ of\ the\ room\ in\ the\ form\:\ \r\n\ You\ are\ in\ the\ kitchen.\ \r\n\ Exits\:\ north\ west\r\n\ \r\n\ @return\ A\ short\ description\ of\ this\ room\ with\ the\ exits\r\n
comment3.params=enemy
comment3.target=void\ addEnemy(Enemy)
comment3.text=\r\n\ Add\ an\ enemy\ (or\ enemies)\ to\ the\ room.\r\n
comment30.params=
comment30.target=java.lang.String\ getExitString()
comment30.text=\r\n\ Return\ a\ String\ describing\ the\ room's\ exits,\ for\ example\ "Exits\:\ north\ west".\r\n\ \r\n\ @return\ Details\ of\ the\ room's\ exits.\r\n
comment31.params=direction
comment31.target=Room\ getExit(java.lang.String)
comment31.text=\r\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\r\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\r\n\ \r\n\ @param\ direction\ The\ exit's\ direction.\r\n\ @return\ The\ room\ in\ the\ given\ direction.\r\n
comment32.params=
comment32.target=boolean\ hasEnemy()
comment32.text=\r\n\ @return\ True\ if\ the\ room\ has\ an\ enemy.\r\n
comment33.params=
comment33.target=Enemy\ getEnemy()
comment33.text=\r\n\ @return\ The\ enemies\ in\ the\ room.\r\n
comment4.params=itemToBeRemoved
comment4.target=void\ removeRoomInventory(Item)
comment4.text=\r\n\ @param\ itemToBeRemoved\ Removes\ an\ item\ from\ the\ current\ room\ inventory.\r\n
comment5.params=
comment5.target=void\ removeEnemy()
comment5.text=\r\n\ Remove\ an\ enemy\ from\ a\ room.\r\n
comment6.params=unlockRoom\ unlockItem\ unlocksRoomID
comment6.target=void\ setUnlockRoom(boolean,\ java.lang.String,\ java.lang.String)
comment6.text=\r\n\ @param\ unlockRoom\ \ \ \ Whether\ or\ not\ the\ room\ is\ an\ unlockroom.\r\n\ @param\ unlockItem\ \ \ \ The\ item\ where\ the\ unlocksRoomID\ is\ opened\ with.\r\n\ @param\ unlocksRoomID\ The\ String\ of\ the\ room\ ID\ number\ to\ open.\r\n
comment7.params=direction\ neighbor
comment7.target=void\ setExit(java.lang.String,\ Room)
comment7.text=\r\n\ Define\ an\ exit\ from\ this\ room.\r\n\ \r\n\ @param\ direction\ The\ direction\ of\ the\ exit.\r\n\ @param\ neighbor\ \ The\ room\ to\ which\ the\ exit\ leads.\r\n
comment8.params=hasEnemy
comment8.target=void\ setHasEnemy(boolean)
comment8.text=\r\n\ @param\ hasEnemy\ Sets\ if\ the\ room\ has\ an\ enemy\ or\ not.\r\n
comment9.params=canBurn
comment9.target=void\ setCanBeBurned(boolean)
comment9.text=\r\n\ @param\ canBurn\ sets\ if\ you\ can\ burn\ something\ in\ this\ room.\r\n
numComments=34
