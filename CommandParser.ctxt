#BlueJ class context
comment0.target=CommandParser
comment0.text=\r\n\ CommandParser\ -\ parses\ the\ commands\ from\ parser\ and\ game\r\n\ \r\n\ Commands\ entered\ in\ parser\ are\ checked\ in\ Game,\ then\ the\ commands\ are\ processed\ here.\r\n\r\n\ @author\ Stefan\ Jilderda\ and\ Stefan\ Kuppen\r\n\ @version\ 24.01.2020\r\n
comment1.params=player\ room\ level
comment1.target=CommandParser(Player,\ Room,\ Levels)
comment1.text=\r\n\ Create\ the\ commandparser,\ it\ needs\ to\ know\ the\ current\ room,\ level\ and\ the\ player.\r\n\ \r\n\ @param\ player\ The\ current\ player\ state\r\n\ @param\ room\ \ \ The\ current\ room\r\n\ @param\ level\ \ The\ level\ the\ player\ is\ playing\r\n
comment10.params=command
comment10.target=void\ useItem(Command)
comment10.text=\r\n\ "use"\ was\ entered.\ Check\ if\ a\ second\ word\ has\ been\ sent\ too.\r\n\ If\ there\ is\ a\ second\ word,\ check\ if\ the\ player\ has\ the\ item\ in\ it's\ inventory.\r\n\ Then\ check\ if\ the\ item\ can\ be\ used\ (must\ be\ a\ key).\r\n\ Unlock\ the\ locked\ room\ if\ it\ is\ the\ correct\ key\ and\ if\ the\ player\ in\ the\ right\ room\ to\ use\ it.\r\n\ \r\n\ @param\ command\ The\ command\ entered\ in\ the\ Parser.\r\n
comment11.params=command
comment11.target=void\ burnItem(Command)
comment11.text=\r\n\ "burn"\ was\ entered.\ Check\ if\ a\ second\ word\ has\ been\ sent\ too.\r\n\ If\ there\ is\ a\ second\ word,\ check\ if\ the\ player\ has\ an\ item\ to\ burn\ something\ with\ in\ it's\ inventory.\r\n\ Then\ check\ if\ the\ item\ or\ object\ can\ be\ burned.\r\n\ Burn\ the\ item\ or\ object\ if\ the\ player\ has\ something\ to\ burn\ with\ and\ has\ the\ other\ conditions\ met.\r\n\ \r\n\ @param\ command\ The\ command\ entered\ in\ the\ Parser.\r\n
comment12.params=command
comment12.target=void\ eatItem(Command)
comment12.text=\r\n\ "eat"\ was\ entered.\ Check\ if\ a\ second\ word\ has\ been\ sent\ too\ and\ check\ if\ the\ item\ is\ food.\r\n\ If\ it\ is\ a\ food\ item,\ heal\ the\ player\ if\ their\ health\ isn't\ full,\ and\ remove\ the\ item\ and\ its\ weight\ from\ the\ player\ inventory.\r\n\ \r\n\ @param\ command\ The\ command\ entered\ in\ the\ Parser.\r\n
comment13.params=command
comment13.target=void\ equipItem(Command)
comment13.text=\r\n\ "equip"\ was\ entered.\ Check\ if\ a\ second\ word\ has\ been\ sent\ too\ and\ check\ if\ the\ item\ is\ a\ weapon\ or\ armor.\r\n\ If\ it\ is\ a\ weapon\ or\ armor,\ equip\ it\ and\ remove\ the\ currently\ equipped\ item\ in\ that\ slot.\r\n\ If\ player\ was\ naked\ or\ unarmed,\ don't\ add\ that\ item\ to\ inventory.\r\n\ \r\n\ @param\ command\ The\ command\ entered\ in\ the\ Parser.\r\n
comment14.params=command
comment14.target=void\ unequipItem(Command)
comment14.text=\r\n\ "unequip"\ was\ entered.\ Check\ if\ a\ second\ word\ has\ been\ sent\ too\ and\ check\ if\ the\ item\ is\ equipped.\r\n\ If\ the\ item\ is\ equipped,\ unequip\ the\ item\ and\ replace\ the\ armor\ or\ weapon\ slot\ with\ "naked"\ or\ "unarmed"\ respectively.\r\n\ \r\n\ @param\ command\ The\ command\ entered\ in\ the\ Parser.\r\n
comment2.params=command
comment2.target=void\ goRoom(Command)
comment2.text=\r\n\ "go"\ was\ entered.\ Check\ if\ a\ second\ word\ has\ been\ sent\ too.\r\n\ Go\ in\ the\ direction\ the\ player\ has\ entered\ in\ secondWord.\r\n\ \r\n\ This\ command\ also\ checks\ for\ locked\ rooms\ and\ trap\ rooms.\r\n\ If\ the\ next\ room\ has\ an\ enemy,\ enter\ into\ battle.\r\n\ \r\n\ @param\ command\ The\ command\ entered\ in\ the\ Parser.\r\n
comment3.params=
comment3.target=void\ goBack()
comment3.text=\r\n\ "back"\ was\ entered.\ Check\ if\ the\ backstack\ is\ not\ empty.\ \r\n\ If\ not\ empty,\ place\ the\ player\ back\ in\ the\ previous\ room.\r\n
comment4.params=
comment4.target=void\ lookInventory()
comment4.text=\r\n\ "inv"\ was\ entered.\ Check\ if\ the\ player\ inventory\ is\ not\ empty.\ \r\n\ If\ not\ empty,\ print\ the\ player\ inventory\ on\ screen.\r\n
comment5.params=
comment5.target=void\ searchRoom()
comment5.text=\r\n\ "search"\ was\ entered.\ Check\ if\ the\ room\ inventory\ is\ not\ empty.\ \ \r\n\ If\ not\ empty,\ print\ the\ room\ inventory\ on\ screen.\r\n
comment6.params=
comment6.target=void\ getInfo()
comment6.text=\r\n\ "info"\ was\ entered.\ \r\n\ Print\ the\ player's\ current\ info\r\n
comment7.params=command
comment7.target=void\ pickupItem(Command)
comment7.text=\r\n\ "take"\ was\ entered.\ Check\ if\ a\ second\ word\ has\ been\ sent\ too\ and\ check\ if\ the\ item\ is\ takeable.\r\n\ If\ it\ is\ takeable,\ check\ if\ the\ room\ has\ the\ item\ in\ their\ inventory\ and\ take\ the\ item,\r\n\ adding\ the\ item\ from\ the\ inventory\ and\ adding\ the\ weight,\ also\ removing\ the\ item\ from\ the\ current\ room.\r\n\ \r\n\ @param\ command\ The\ command\ entered\ in\ the\ Parser.\r\n
comment8.params=command
comment8.target=void\ dropItem(Command)
comment8.text=\r\n\ "drop"\ was\ entered.\ Check\ if\ a\ second\ word\ has\ been\ sent\ too.\r\n\ If\ there\ is\ a\ second\ word,\ check\ if\ the\ player\ has\ the\ item\ in\ their\ inventory\ and\ drop\ the\ item,\r\n\ removing\ the\ item\ from\ their\ inventory\ and\ losing\ the\ weight,\ also\ returning\ the\ item\ to\ the\ current\ room.\r\n\ \r\n\ @param\ command\ The\ command\ entered\ in\ the\ Parser.\r\n
comment9.params=command
comment9.target=void\ getItemInformation(Command)
comment9.text=\r\n\ "inspect"\ was\ entered.\ Check\ if\ a\ second\ word\ has\ been\ sent\ too.\r\n\ If\ there\ is\ a\ second\ word,\ check\ if\ the\ player\ has\ the\ item\ in\ their\ inventory\ and\ return\ the\ info.\r\n\ If\ the\ item\ is\ a\ weapon\ or\ armor,\ print\ trh\ damag\ or\ armor\ rating,\ respectively.\r\n\ \r\n\ @param\ command\ The\ command\ entered\ in\ the\ Parser.\r\n
numComments=15
